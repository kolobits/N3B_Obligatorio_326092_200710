// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obligatorio.Infraestructura.AccesoDatos.EF;

#nullable disable

namespace Obligatorio.Infraestructura.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    [Migration("20250626183836_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Envios");

                    b.HasDiscriminator().HasValue("Envio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Seguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("EnvioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EnvioId");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Envio");

                    b.Property<int?>("AgenciaRetiroId")
                        .HasColumnType("int");

                    b.HasIndex("AgenciaRetiroId");

                    b.HasDiscriminator().HasValue("EnvioComun");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioUrgente", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Envio");

                    b.Property<bool>("EsEficiente")
                        .HasColumnType("bit")
                        .HasColumnName("EsEficiente");

                    b.HasDiscriminator().HasValue("EnvioUrgente");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Cliente", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Empleado", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Administrador", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Empleado");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Funcionario", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Empleado");

                    b.HasDiscriminator().HasValue("Funcionario");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Envio.DireccionPostal", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Calle");

                            b1.Property<int?>("CodigoPostal")
                                .IsRequired()
                                .HasColumnType("int")
                                .HasColumnName("Codigo Postal");

                            b1.Property<int?>("Numero")
                                .IsRequired()
                                .HasColumnType("int")
                                .HasColumnName("Numero");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Agencia.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Agencia.Ubicacion", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<double>("Latitud")
                                .HasColumnType("float")
                                .HasColumnName("Latitud");

                            b1.Property<double>("Longitud")
                                .HasColumnType("float")
                                .HasColumnName("Longitud");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Envio.Peso", "Peso", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<double>("Value")
                                .HasColumnType("float")
                                .HasColumnName("Peso");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Envio.Tracking", "Tracking", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("Tracking");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Peso")
                        .IsRequired();

                    b.Navigation("Tracking")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Seguimiento", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Envio", "Envio")
                        .WithMany("Seguimientos")
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Envio");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Usuario.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Usuario.NombreCompleto", "NombreCompleto", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Apellido")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Apellido");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Usuario.Password", "Password", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Password");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("NombreCompleto")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Agencia", "AgenciaRetiro")
                        .WithMany()
                        .HasForeignKey("AgenciaRetiroId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AgenciaRetiro");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioUrgente", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.Vo.Envio.DireccionPostal", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("EnvioUrgenteId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Calle");

                            b1.Property<int?>("CodigoPostal")
                                .IsRequired()
                                .HasColumnType("int")
                                .HasColumnName("Codigo Postal");

                            b1.Property<int?>("Numero")
                                .IsRequired()
                                .HasColumnType("int")
                                .HasColumnName("Numero");

                            b1.HasKey("EnvioUrgenteId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioUrgenteId");
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Navigation("Seguimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
